debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
tableSubsets = matrix(nrow = vectNom,ncol = length(habitat[1,])-3)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = vectNom)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = vectNom)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = c(vectNom))
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = c(vectNom,1:16))
colnames(tableSubsets) = vectNom
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,)
colnames(tableSubsets) = vectNom
View(tableSubsets)
for (i in 1:length(vectNom)){
especesActu = vectNom[i]
fooNom = paste("loca",especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[i+1] == 1)
tableSubsets$especesActu = list(foosubset)
}
View(tableSubsets)
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,)
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
View(tableSubsets)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
debugSource("/media/jan_codage/CORSAIR/testR.R")
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[especesActu] = list(foosubset)[1,]
}
tableSubsets[[especesActu]] = list(foosubset)[1,]
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)[1,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = (foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = (foosubset)
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = (foosubset)
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
tableSubsets[,1] = foosubset
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[,1] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[,1] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[1,] = foosubset
}
View(tableSubsets)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[1,] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$vectNom[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$vectNom[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[i] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]  # Get species name
fooNom = paste("loca", especesActu, sep = "")  # Construct name (not used)
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Subset based on species presence
# Assign foosubset to the correct column
tableSubsets[[especesActu]] <- foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets[i] = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets <- as.data.frame(lapply(tableSubsets, unlist))
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets <- as.data.frame(lapply(tableSubsets, unlist))
{
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubset$gem[1]
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets$gem[1]
tableSubsets$gem[1,]
tableSubsets$gem
View(tableSubsets)
tableSubsets$gem
a = tableSubsets$Gem
tableSubsets$Gem
tableSubsets$Gem[1]
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = foosubset
}
tableSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] <- foosubset
}
tableSubsets$Gem
listSubsets$Gem
# Chunk 1
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(tidyverse)
library(ade4)
#library(rpart)
#library(MASS)
# Chunk 3
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
# Chunk 4
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
listSubsets$Gem
# Chunk 1
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(tidyverse)
library(ade4)
#library(rpart)
#library(MASS)
# Chunk 3
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
# Chunk 4
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
View(habitat)
vectNom = names(commu[2:17])
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
rowMeans(habitat[listSubsets$Gem])
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem)
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE in listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
subset(habitat, habitat$IdPE %in% listSubsets$Gem)
habitat = habitat[,-2:-3]
subset(habitat, habitat$IdPE %in% listSubsets$Gem)
rowMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
plot(ExGem)
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
plot(ExGem)
hist(ExGem)
barplot(ExGem)
habitat[,2:3] = habitat[,2:3]/1e6
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
View(habitat)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2,3]) = c("long/1e6","lat/1e6")
colnames(habitat[2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2]) = "long/1e6"; colnames(habitat[3])"lat/1e6"
colnames(habitat[2]) = "long/1e6"
colnames(habitat[3])"lat/1e6"
colnames(habitat[2]) = "long/1e6"; colnames(habitat[3]) = "lat/1e6"
rownames(habitat)
colnames(habitat)
name = colnames(habitat)
name = colnames(habitat)
name[2:3] = c("long/1e6","lat/1e6")
colnames(habitat) = name
barplot(ExGem,
psh = 2)
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,)
barplot(ExGem,
width = 2,horiz = T)
barplot(ExGem,
width = 2,)
barplot(ExGem,
width = 2,las = 2)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e6","lat/1e6"); name[15] = "prec/1e3"
colnames(habitat) = name
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem,
width = 2,las = 2)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem[-1],
width = 2,las = 2)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
ANALYSE :
####  ==> extraire informations précédentes = subset par colonnes dont on extrait les numéros des localisations
Création des subsets de numéro de lieu ayant des Gem (Colombe.a.croissants)
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
listSubsets$Gem
On a toutes les localisation de chaque espèce
Exemple d'appel pour les localisation de Gem :
####  ==> moyenne des données sur l'habitat pour chaque colonne du subset (espèces)
Pour se donner une idée de vers ou on vas, nous allons regarder chaque moyenne de variables
```{r}
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem[-1],
width = 2,las = 2)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem[-1],
width = 2,las = 2)
####  ==> expliquer chacune des variables de l'espèce en fonction des variables de l'environnement
--> taille petite quand température haute, alimentation quand hydrométrie élevée
####  ==> juxtaposition des tableaux :
tab1 --> subset = colnames(especes) + moyenne de chaque caractéristique des milieux
transposé de tab1 sur tab2
tab2 --> especes
####  ==> conclure :
####  ==> conclure :
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
