<<<<<<< HEAD
debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
debugSource("/media/jan_codage/CORSAIR/testR.R")
tableSubsets = matrix(nrow = vectNom,ncol = length(habitat[1,])-3)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = vectNom)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = vectNom)
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = c(vectNom))
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,
dimnames = c(vectNom,1:16))
colnames(tableSubsets) = vectNom
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,)
colnames(tableSubsets) = vectNom
View(tableSubsets)
for (i in 1:length(vectNom)){
especesActu = vectNom[i]
fooNom = paste("loca",especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[i+1] == 1)
tableSubsets$especesActu = list(foosubset)
}
View(tableSubsets)
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
tableSubsets = matrix(nrow = length(vectNom),ncol = length(habitat[1,])-3,)
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
View(tableSubsets)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Use [[]] to access columns dynamically
tableSubsets[[especesActu]] = list(foosubset)  # Assign as list
}
debugSource("/media/jan_codage/CORSAIR/testR.R")
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[especesActu] = list(foosubset)[1,]
}
tableSubsets[[especesActu]] = list(foosubset)[1,]
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)[1,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = (foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = (foosubset)
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = (foosubset)
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
tableSubsets[,1] = foosubset
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[,1] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[,1] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[1,] = foosubset
}
View(tableSubsets)
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[1,] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$vectNom[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$vectNom[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[i] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[i] = foosubset
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets$especesActu = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]  # Get species name
fooNom = paste("loca", especesActu, sep = "")  # Construct name (not used)
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)  # Subset based on species presence
# Assign foosubset to the correct column
tableSubsets[[especesActu]] <- foosubset
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets[i] = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets <- as.data.frame(lapply(tableSubsets, unlist))
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets <- as.data.frame(lapply(tableSubsets, unlist))
{
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
tableSubsets$especesActu = tableSubsets[[especesActu]][i,]
}
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubset$gem[1]
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = list(foosubset)
}
tableSubsets$gem[1]
tableSubsets$gem[1,]
tableSubsets$gem
View(tableSubsets)
tableSubsets$gem
a = tableSubsets$Gem
tableSubsets$Gem
tableSubsets$Gem[1]
tableSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(tableSubsets) = vectNom
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
fooNom = paste("loca", especesActu, sep = "")
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] = foosubset
}
tableSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
tableSubsets[[especesActu]] <- foosubset
}
tableSubsets$Gem
listSubsets$Gem
# Chunk 1
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(tidyverse)
library(ade4)
#library(rpart)
#library(MASS)
# Chunk 3
=======
las=2,
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
text(x=47, # ajout de texte sur le graph
y=5, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2)))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
text(x=47, # ajout de texte sur le graph
y=7, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2)))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"m"))
text(x=47, # ajout de texte sur le graph
y=7, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2),"m"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"\n\nm"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"\n m"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"  m"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"     m"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"\tm"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2),"\t\tm"))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
sub = c("Taille moyenne 1914 :",mean(taille_14),"Taille moyenne 1996 :",mean(taille_96)),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
text(x=47, # ajout de texte sur le graph
y=7, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2)))
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
text(x=47, # ajout de texte sur le graph
y=7, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2)))
shapiro.test(taille_14)
shapiro.test(taille_96)
taille_14 = rep(c(1.47, 1.55, 1.57, 1.6, 1.63, 1.65, 1.68, 1.7, 1.73, 1.75, 1.78, 1.8, 1.83, 1.85, 1.88, 1.91, 1.93, 1.96),c(1, 1, 4, 6, 8, 16, 17, 14, 18, 11, 8, 12, 2, 3, 1, 0, 0, 0))
taille_96 = rep(c(1.47, 1.55, 1.57, 1.6, 1.63, 1.65, 1.68, 1.7, 1.73, 1.75, 1.78, 1.8, 1.83, 1.85, 1.88, 1.91, 1.93, 1.96),c(0, 0, 0, 0, 2, 5, 2, 7, 8, 10, 12, 8, 11, 6, 2, 3, 1, 3))
an <- matrix(
data = c(1, 1, 4, 6, 8, 16, 17, 14, 18, 11, 8, 12, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 5, 2, 7, 8, 10, 12, 8, 11, 6, 2, 3, 1, 3),
nrow=2, byrow = TRUE
)
rownames(an)<-c("an_14","an_96")
colnames(an)<-c(1.47, 1.55, 1.57, 1.6, 1.63, 1.65, 1.68, 1.7, 1.73, 1.75, 1.78, 1.8, 1.83, 1.85, 1.88, 1.91, 1.93, 1.96)
graph <- barplot(an,
legend.text = c("1914", "1996"),
beside = T,
main="Fréquence d'observation des tailles selon l'année",
las=2,
xlab = "taille (m)",
ylim = c(0, 20),
ylab = "proportion",
col=c("lightblue","deepskyblue"),
)
text(x=47, # ajout de texte sur le graph
y=10, # modifie la position du texte
labels = c("Taille moyenne 1914:\n\n",round(mean(taille_14),2)))
text(x=47, # ajout de texte sur le graph
y=7, # modifie la position du texte
labels = c("Taille moyenne 1996:\n\n",round(mean(taille_96),2)))
shapiro.test(taille_14)
shapiro.test(taille_96)
var.test(an_14,an_96)
var.test(taille_14,taille_96)
var.test(taille_14,taille_96)
t.test(taille_14,taille_96,var.equal = T)
t.test(taille_96,taille_14,var.equal = T, alternative = "greater")
t.test(taille_96,taille_14,var.equal = T, alternative = "greater")
t.test(taille_96,taille_14,var.equal = T, alternative = "less")
# test1 : les hommes deviennent de plus en plus grands
t.test(taille_96,taille_14,var.equal = T, alternative = "greater")
# test2 : les hommes étaient plus grands avant
t.test(taille_96,taille_14,var.equal = T, alternative = "less")
knitr::opts_chunk$set(echo = TRUE)
library(limma)
install.packages(limma)
install.packages("C:/Users/camil/Downloads/limma_2.10.7.tar.gz", repos = NULL, type = "source")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
library(limma)
YL <- as.numeric(info$stage=='YL')
BiocManager::install("made4")
library(made4) # permet de faire de l'analyse multivariée
setwd("~/GitHub/fr.univ-tlse3_ADM_project/scripts")
>>>>>>> 437696c06da52affc33a9fb9e47a9560c2662409
chisq.test(commu, habitat)
summary(chisq.test(commu, habitat))
>>>>>>> c245cd6accfdda520667d1976a157225dce3cae6
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
<<<<<<< HEAD
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
# Chunk 4
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
# concaténer des éléments
locaGem = subset(commu$IdPE, commu$Gem == 1)
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
listSubsets$Gem
# Chunk 1
knitr::opts_chunk$set(fig.align="center", fig.width=6, fig.height=6, fig.path="Figs/", echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
# Chunk 2
library(tidyverse)
library(ade4)
#library(rpart)
#library(MASS)
# Chunk 3
=======
commu = read.table("../data/communautes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
>>>>>>> c245cd6accfdda520667d1976a157225dce3cae6
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
<<<<<<< HEAD
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
# Chunk 4
vectNom = names(commu[2:17])
paste("results/Volcakin",i,".pdf", sep = "")
View(habitat)
vectNom = names(commu[2:17])
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
rowMeans(habitat[listSubsets$Gem])
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem)
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE == listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE in listSubsets$Gem))
rowMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
subset(habitat, habitat$IdPE %in% listSubsets$Gem)
habitat = habitat[,-2:-3]
subset(habitat, habitat$IdPE %in% listSubsets$Gem)
rowMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
plot(ExGem)
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
plot(ExGem)
hist(ExGem)
barplot(ExGem)
habitat[,2:3] = habitat[,2:3]/1e6
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
View(habitat)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[,2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2,3]) = c("long/1e6","lat/1e6")
colnames(habitat[2:3]) = c("long/1e6","lat/1e6")
colnames(habitat[2]) = "long/1e6"; colnames(habitat[3])"lat/1e6"
colnames(habitat[2]) = "long/1e6"
colnames(habitat[3])"lat/1e6"
colnames(habitat[2]) = "long/1e6"; colnames(habitat[3]) = "lat/1e6"
rownames(habitat)
colnames(habitat)
name = colnames(habitat)
name = colnames(habitat)
name[2:3] = c("long/1e6","lat/1e6")
colnames(habitat) = name
barplot(ExGem,
psh = 2)
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,)
barplot(ExGem,
width = 2,horiz = T)
barplot(ExGem,
width = 2,)
barplot(ExGem,
width = 2,las = 2)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e6 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e6","lat/1e6"); name[15] = "prec/1e3"
colnames(habitat) = name
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem,
width = 2,las = 2)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem,
width = 2,las = 2)
barplot(ExGem[-1],
width = 2,las = 2)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
ANALYSE :
####  ==> extraire informations précédentes = subset par colonnes dont on extrait les numéros des localisations
Création des subsets de numéro de lieu ayant des Gem (Colombe.a.croissants)
listSubsets = data.frame(matrix(nrow = length(vectNom), ncol = length(habitat[1,]) - 3))
colnames(listSubsets) = vectNom
listSubsets <- list()
for (i in 1:length(vectNom)) {
especesActu = vectNom[i]
foosubset = subset(commu$IdPE, commu[[i+1]] == 1)
listSubsets[[especesActu]] <- foosubset
}
listSubsets$Gem
listSubsets$Gem
On a toutes les localisation de chaque espèce
Exemple d'appel pour les localisation de Gem :
####  ==> moyenne des données sur l'habitat pour chaque colonne du subset (espèces)
Pour se donner une idée de vers ou on vas, nous allons regarder chaque moyenne de variables
```{r}
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem[-1],
width = 2,las = 2)
par(mfrow = c(1,1))
ExGem = colMeans(subset(habitat, habitat$IdPE %in% listSubsets$Gem))
barplot(ExGem[-1],
width = 2,las = 2)
####  ==> expliquer chacune des variables de l'espèce en fonction des variables de l'environnement
--> taille petite quand température haute, alimentation quand hydrométrie élevée
####  ==> juxtaposition des tableaux :
tab1 --> subset = colnames(especes) + moyenne de chaque caractéristique des milieux
transposé de tab1 sur tab2
tab2 --> especes
####  ==> conclure :
####  ==> conclure :
=======
commu = read.table("../data/communautes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
View(commu)
View(commu)
View(especes)
View(especes)
View(habitat)
View(habitat)
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
taille = length(commu[1,])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,i], habitat[j,])
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
taille = length(commu[1,])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], habitat[index_localisation,])
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
taille = length(commu[1,])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], t(habitat[index_localisation,]))
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
taille = length(commu[1,])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], t(as.matrix(habitat[index_localisation,])))
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
taille = length(commu[1,])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], t(as.matrix(habitat[index_localisation, 4:19])))
}
}
habitat_matrice = habitat[,4:19]
View(habitat_matrice)
habitat_matrice = as.matrix(habitat[,4:19])
View(habitat_matrice)
habitat_matrice = t(as.matrix(habitat[,4:19]))
habitat = habitat[,1-4:19]
View(habitat)
View(habitat)
habitat = habitat[,-2:3]
View(habitat)
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:3]
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
chisq.test(commu, habitat)
taille = commu[,1]
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], habitat[index_localisation,])
}
}
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
chisq.test(commu[,index_espece], habitat[,index_localisation])
}
}
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
print(chisq.test(commu[,index_espece], habitat[,index_localisation]))
}
}
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
print(chisq.test(commu[,index_espece], habitat[,index_localisation]))
}
}
taille = length(commu[,1])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
print(chisq.test(commu[,index_espece], habitat[,index_localisation]))
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
write.table(x = data_chi2_q1, file = "chi-2_q1_export.txt", fileEncoding = "UTF-8")
}
}
write.table(x = data_chi2_q1,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8",
sep = " ",
eol = "\n")
write.csv(x = data_chi2_q1,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8",
sep = " ",
eol = "\n")
write.csv(x = data_chi2_q1,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
write.csv(x = data_chi2_q1,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
View(data_chi2_q1)
View(data_chi2_q1)
write.csv(x = cat(commu[,index_espece], habitat[,index_localisation], pvalue, sep = ","),
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
file.create("chi-2_q1_export.txt")
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
write.csv(x = cat(commu[,index_espece], habitat[,index_localisation], pvalue, sep = ","),
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
write.csv(x = c(commu[,index_espece], habitat[,index_localisation], pvalue, sep = ","),
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
write.csv(x = commu[,index_espece], habitat[,index_localisation], pvalue,
sep = ",",
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
write.csv(x = commu[,index_espece], habitat[,index_localisation], pvalue,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
texte = paste(commu[,index_espece], habitat[,index_localisation], pvalue, sep = ",")
write.csv(x = texte,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
file.edit()
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
texte = paste(paste(commu[,index_espece], habitat[,index_localisation], sep = ","), pvalue, sep = ",")
write.csv(x = texte,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
>>>>>>> c245cd6accfdda520667d1976a157225dce3cae6
habitat = read.table("../data/habitat.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
especes = read.table("../data/especes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
<<<<<<< HEAD
commu = read.table("../data/communautes.tsv", sep = "\t", stringsAsFactors = T, header = T, na.strings = T)
habitat = habitat[,-2:-3]
habitat[,2:3] = habitat[,2:3]/1e5 ; habitat[15] = habitat[15]/1e3
name = colnames(habitat)
name[2:3] = c("long/1e5","lat/1e5"); name[15] = "prec/1e3"
colnames(habitat) = name
=======
commu = read.table("../data/communautes.tsv", sep = "\t",
stringsAsFactors = T, header = T, na.strings = T)
# présence de l'espèce : commu colonnes
# caractéristiques du milieu : habitat lignes
# chi-2 entre espèce et chaque caractéristique du milieu
habitat = habitat[,-2:-3]
chisq.test(commu, habitat)
taille = length(commu[,1])
file.create("chi-2_q1_export.txt")
file.edit()
for (index_espece in 1:taille){
for (index_localisation in 1:taille){
data_chi2_q1 = chisq.test(commu[,index_espece], habitat[,index_localisation])
pvalue = data_chi2_q1$p.value
texte = paste(paste(commu[,index_espece], habitat[,index_localisation], sep = ","), pvalue, sep = ",")
write.csv(x = texte,
file = "chi-2_q1_export.txt",
append = TRUE,
fileEncoding = "UTF-8")
}
}
>>>>>>> c245cd6accfdda520667d1976a157225dce3cae6
